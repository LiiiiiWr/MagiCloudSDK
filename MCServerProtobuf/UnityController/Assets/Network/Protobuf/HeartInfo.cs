// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: HeartInfo.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace MagiCloudServer {

  /// <summary>Holder for reflection information generated from HeartInfo.proto</summary>
  public static partial class HeartInfoReflection {

    #region Descriptor
    /// <summary>File descriptor for HeartInfo.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static HeartInfoReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg9IZWFydEluZm8ucHJvdG8SD01hZ2lDbG91ZFNlcnZlciIrCghIZWFySW5m",
            "bxIPCgdjdXJUaW1lGAEgASgFEg4KBmhvc3RpcBgCIAEoCUICSAFiBnByb3Rv",
            "Mw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::MagiCloudServer.HearInfo), global::MagiCloudServer.HearInfo.Parser, new[]{ "CurTime", "Hostip" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class HearInfo : pb::IMessage<HearInfo> {
    private static readonly pb::MessageParser<HearInfo> _parser = new pb::MessageParser<HearInfo>(() => new HearInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HearInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MagiCloudServer.HeartInfoReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HearInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HearInfo(HearInfo other) : this() {
      curTime_ = other.curTime_;
      hostip_ = other.hostip_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HearInfo Clone() {
      return new HearInfo(this);
    }

    /// <summary>Field number for the "curTime" field.</summary>
    public const int CurTimeFieldNumber = 1;
    private int curTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CurTime {
      get { return curTime_; }
      set {
        curTime_ = value;
      }
    }

    /// <summary>Field number for the "hostip" field.</summary>
    public const int HostipFieldNumber = 2;
    private string hostip_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Hostip {
      get { return hostip_; }
      set {
        hostip_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HearInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HearInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CurTime != other.CurTime) return false;
      if (Hostip != other.Hostip) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CurTime != 0) hash ^= CurTime.GetHashCode();
      if (Hostip.Length != 0) hash ^= Hostip.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CurTime != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(CurTime);
      }
      if (Hostip.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Hostip);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CurTime != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CurTime);
      }
      if (Hostip.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Hostip);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HearInfo other) {
      if (other == null) {
        return;
      }
      if (other.CurTime != 0) {
        CurTime = other.CurTime;
      }
      if (other.Hostip.Length != 0) {
        Hostip = other.Hostip;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            CurTime = input.ReadInt32();
            break;
          }
          case 18: {
            Hostip = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
