// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: ExperimentInfo.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace MCServer {

  /// <summary>Holder for reflection information generated from ExperimentInfo.proto</summary>
  public static partial class ExperimentInfoReflection {

    #region Descriptor
    /// <summary>File descriptor for ExperimentInfo.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ExperimentInfoReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChRFeHBlcmltZW50SW5mby5wcm90bxIITUNTZXJ2ZXIiRwoORXhwZXJpbWVu",
            "dEluZm8SCwoDb3duGAEgASgJEgwKBG5hbWUYAiABKAkSCgoCaWQYAyABKAUS",
            "DgoGaXNCYWNrGAQgASgIYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::MCServer.ExperimentInfo), global::MCServer.ExperimentInfo.Parser, new[]{ "Own", "Name", "Id", "IsBack", "ExperimentPath" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  ///ʵ����Ϣ
  /// </summary>
  public sealed partial class ExperimentInfo : pb::IMessage<ExperimentInfo> {
    private static readonly pb::MessageParser<ExperimentInfo> _parser = new pb::MessageParser<ExperimentInfo>(() => new ExperimentInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ExperimentInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MCServer.ExperimentInfoReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExperimentInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExperimentInfo(ExperimentInfo other) : this() {
      own_ = other.own_;
      name_ = other.name_;
      id_ = other.id_;
      isBack_ = other.isBack_;
      experimentPath_ = other.experimentPath_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExperimentInfo Clone() {
      return new ExperimentInfo(this);
    }

    /// <summary>Field number for the "own" field.</summary>
    public const int OwnFieldNumber = 1;
    private string own_ = "";
    /// <summary>
    ///������Ŀ
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Own {
      get { return own_; }
      set {
        own_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    /// <summary>
    ///ʵ������
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 3;
    private int id_;
    /// <summary>
    ///ʵ����
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "isBack" field.</summary>
    public const int IsBackFieldNumber = 4;
    private bool isBack_;
    /// <summary>
    ///�Ƿ�ִ�з�������
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsBack {
      get { return isBack_; }
      set {
        isBack_ = value;
      }
    }

    /// <summary>Field number for the "experimentPath" field.</summary>
    public const int ExperimentPathFieldNumber = 5;
    private string experimentPath_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ExperimentPath {
      get { return experimentPath_; }
      set {
        experimentPath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ExperimentInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ExperimentInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Own != other.Own) return false;
      if (Name != other.Name) return false;
      if (Id != other.Id) return false;
      if (IsBack != other.IsBack) return false;
      if (ExperimentPath != other.ExperimentPath) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Own.Length != 0) hash ^= Own.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Id != 0) hash ^= Id.GetHashCode();
      if (IsBack != false) hash ^= IsBack.GetHashCode();
      if (ExperimentPath.Length != 0) hash ^= ExperimentPath.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Own.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Own);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (Id != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Id);
      }
      if (IsBack != false) {
        output.WriteRawTag(32);
        output.WriteBool(IsBack);
      }
      if (ExperimentPath.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(ExperimentPath);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Own.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Own);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (IsBack != false) {
        size += 1 + 1;
      }
      if (ExperimentPath.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ExperimentPath);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ExperimentInfo other) {
      if (other == null) {
        return;
      }
      if (other.Own.Length != 0) {
        Own = other.Own;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.IsBack != false) {
        IsBack = other.IsBack;
      }
      if (other.ExperimentPath.Length != 0) {
        ExperimentPath = other.ExperimentPath;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Own = input.ReadString();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 24: {
            Id = input.ReadInt32();
            break;
          }
          case 32: {
            IsBack = input.ReadBool();
            break;
          }
          case 42: {
            ExperimentPath = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
