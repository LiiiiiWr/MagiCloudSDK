// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: SystemSettingInfo.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace MagiCloud.NetWorks {

  /// <summary>Holder for reflection information generated from SystemSettingInfo.proto</summary>
  public static partial class SystemSettingInfoReflection {

    #region Descriptor
    /// <summary>File descriptor for SystemSettingInfo.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static SystemSettingInfoReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChdTeXN0ZW1TZXR0aW5nSW5mby5wcm90bxISTWFnaUNsb3VkLk5ldFdvcmtz",
            "InsKEVN5c3RlbVNldHRpbmdJbmZvEhUKDWlzRnVsbERpc3BsYXkYASABKAgS",
            "EwoLc2NyZWVuV2lkdGgYAiABKAUSFAoMc2NyZWVuSGVpZ2h0GAMgASgFEg8K",
            "B3F1YWxpdHkYBCABKAUSEwoLc291bmRWb2x1bWUYBSABKAUiJgoUU3lzdGVt",
            "U2V0dGluZ1JlY2VpcHQSDgoGc3RhdHVzGAEgASgFYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::MagiCloud.NetWorks.SystemSettingInfo), global::MagiCloud.NetWorks.SystemSettingInfo.Parser, new[]{ "IsFullDisplay", "ScreenWidth", "ScreenHeight", "Quality", "SoundVolume" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MagiCloud.NetWorks.SystemSettingReceipt), global::MagiCloud.NetWorks.SystemSettingReceipt.Parser, new[]{ "Status" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class SystemSettingInfo : pb::IMessage<SystemSettingInfo> {
    private static readonly pb::MessageParser<SystemSettingInfo> _parser = new pb::MessageParser<SystemSettingInfo>(() => new SystemSettingInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SystemSettingInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MagiCloud.NetWorks.SystemSettingInfoReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SystemSettingInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SystemSettingInfo(SystemSettingInfo other) : this() {
      isFullDisplay_ = other.isFullDisplay_;
      screenWidth_ = other.screenWidth_;
      screenHeight_ = other.screenHeight_;
      quality_ = other.quality_;
      soundVolume_ = other.soundVolume_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SystemSettingInfo Clone() {
      return new SystemSettingInfo(this);
    }

    /// <summary>Field number for the "isFullDisplay" field.</summary>
    public const int IsFullDisplayFieldNumber = 1;
    private bool isFullDisplay_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsFullDisplay {
      get { return isFullDisplay_; }
      set {
        isFullDisplay_ = value;
      }
    }

    /// <summary>Field number for the "screenWidth" field.</summary>
    public const int ScreenWidthFieldNumber = 2;
    private int screenWidth_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ScreenWidth {
      get { return screenWidth_; }
      set {
        screenWidth_ = value;
      }
    }

    /// <summary>Field number for the "screenHeight" field.</summary>
    public const int ScreenHeightFieldNumber = 3;
    private int screenHeight_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ScreenHeight {
      get { return screenHeight_; }
      set {
        screenHeight_ = value;
      }
    }

    /// <summary>Field number for the "quality" field.</summary>
    public const int QualityFieldNumber = 4;
    private int quality_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Quality {
      get { return quality_; }
      set {
        quality_ = value;
      }
    }

    /// <summary>Field number for the "soundVolume" field.</summary>
    public const int SoundVolumeFieldNumber = 5;
    private int soundVolume_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SoundVolume {
      get { return soundVolume_; }
      set {
        soundVolume_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SystemSettingInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SystemSettingInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (IsFullDisplay != other.IsFullDisplay) return false;
      if (ScreenWidth != other.ScreenWidth) return false;
      if (ScreenHeight != other.ScreenHeight) return false;
      if (Quality != other.Quality) return false;
      if (SoundVolume != other.SoundVolume) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (IsFullDisplay != false) hash ^= IsFullDisplay.GetHashCode();
      if (ScreenWidth != 0) hash ^= ScreenWidth.GetHashCode();
      if (ScreenHeight != 0) hash ^= ScreenHeight.GetHashCode();
      if (Quality != 0) hash ^= Quality.GetHashCode();
      if (SoundVolume != 0) hash ^= SoundVolume.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (IsFullDisplay != false) {
        output.WriteRawTag(8);
        output.WriteBool(IsFullDisplay);
      }
      if (ScreenWidth != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ScreenWidth);
      }
      if (ScreenHeight != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(ScreenHeight);
      }
      if (Quality != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Quality);
      }
      if (SoundVolume != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(SoundVolume);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (IsFullDisplay != false) {
        size += 1 + 1;
      }
      if (ScreenWidth != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ScreenWidth);
      }
      if (ScreenHeight != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ScreenHeight);
      }
      if (Quality != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Quality);
      }
      if (SoundVolume != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SoundVolume);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SystemSettingInfo other) {
      if (other == null) {
        return;
      }
      if (other.IsFullDisplay != false) {
        IsFullDisplay = other.IsFullDisplay;
      }
      if (other.ScreenWidth != 0) {
        ScreenWidth = other.ScreenWidth;
      }
      if (other.ScreenHeight != 0) {
        ScreenHeight = other.ScreenHeight;
      }
      if (other.Quality != 0) {
        Quality = other.Quality;
      }
      if (other.SoundVolume != 0) {
        SoundVolume = other.SoundVolume;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            IsFullDisplay = input.ReadBool();
            break;
          }
          case 16: {
            ScreenWidth = input.ReadInt32();
            break;
          }
          case 24: {
            ScreenHeight = input.ReadInt32();
            break;
          }
          case 32: {
            Quality = input.ReadInt32();
            break;
          }
          case 40: {
            SoundVolume = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SystemSettingReceipt : pb::IMessage<SystemSettingReceipt> {
    private static readonly pb::MessageParser<SystemSettingReceipt> _parser = new pb::MessageParser<SystemSettingReceipt>(() => new SystemSettingReceipt());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SystemSettingReceipt> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MagiCloud.NetWorks.SystemSettingInfoReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SystemSettingReceipt() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SystemSettingReceipt(SystemSettingReceipt other) : this() {
      status_ = other.status_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SystemSettingReceipt Clone() {
      return new SystemSettingReceipt(this);
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 1;
    private int status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SystemSettingReceipt);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SystemSettingReceipt other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Status != other.Status) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Status != 0) hash ^= Status.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Status != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Status != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Status);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SystemSettingReceipt other) {
      if (other == null) {
        return;
      }
      if (other.Status != 0) {
        Status = other.Status;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Status = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
